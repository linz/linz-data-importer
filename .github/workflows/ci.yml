name: ci

on:
  push:
    branches:
      - main
    tags-ignore:
      - "debian/*"
      - "*-start"
  pull_request:
    branches:
      - "*"

jobs:
  test:
    name: test
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        qgis:
          - latest
          - release-3_16
          - release-3_10
          - release-3_4
    env:
      LDI_LINZ_KEY: ${{ secrets.LDI_LINZ_KEY }}
      LDI_MFE_KEY: ${{ secrets.LDI_MFE_KEY }}
      LDI_NZDF_KEY: ${{ secrets.LDI_NZDF_KEY }}
      LDI_BASEMAPS_KEY: ${{ secrets.LDI_BASEMAPS_KEY }}
    steps:
    - uses: actions/checkout@v2.4.0
    - name: Run test script
      run: |
        ./test.bash "${{ matrix.qgis }}" "$LDI_LINZ_KEY" "$LDI_MFE_KEY" "$LDI_NZDF_KEY" "$LDI_BASEMAPS_KEY"

  lint:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: actions/setup-python@v2.2.2
        with:
          python-version: 3.8
      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --requirement=requirements-dev.txt
      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  deploy:
    name: deploy
    if: startswith(github.ref, 'refs/tags/v')
    needs: [test]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2.4.0
        with:
          ref: ${{ github.ref }}
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          echo ${{ github.repository }}
          zip -r linz-data-importer.zip linz-data-importer
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            ${{ github.ref }}]
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linz-data-importer.zip
          asset_name: linz-data-importer.zip
          asset_content_type: application/zip
      - name: Upload To LINZ DEV QGIS Plugin Repository in AWS
        if: endswith(github.ref, 'UAT')
        run: |
          curl -X POST -H 'Content-Type: application/octet-stream' -H "authorization: bearer ${{ secrets.DEV_PLUGIN_REPO_AUTH }}" --data-binary @linz-data-importer.zip https://plugins.qgis.linz.govt.nz/v1/plugin/linz-data-importer?stage=dev
      - name: Upload To LINZ PRD QGIS Plugin Repository in AWS
        if: false ==  endswith(github.ref, 'UAT')
        run: |
          curl -X POST -H 'Content-Type: application/octet-stream' -H "authorization: bearer ${{ secrets.PRD_PLUGIN_REPO_AUTH }}" --data-binary @linz-data-importer.zip https://plugins.qgis.linz.govt.nz/v1/plugin/linz-data-importer
