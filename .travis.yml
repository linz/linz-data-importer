services:
    - docker

branches: 
  only: 
    - clear_cache

env:
  global:
      - PLUGIN_NAME=linz-data-importer
      - secure: "i4fkdFGJxqp30cb3t/CB9rszbcC8YvEyrM7cAoGfERFneNhXanlXFEtsBBEMJ+T4rA/IsebBdrWk2DNwg4vI92Pd2puZdvKVAT8zDmadJo0MvkJI9gGURAG3FOGhfb+SCwt2GXHn5tMBTIqe+o8hhJ69ZK73U0plGSdoqAXNmq2HyMNa+rvzOCJT234hMdijp/RjDgflAOnl9wTzGy62fthcG2vyiwinkeHcf2htdP/xR++5j+0tSKyfqb+9DMTCWwsrZ2RrmMUF55WSzYRwt98BOtcEQdmlwP7XVHBX/ySdp12w6kZ/EhQl8d362YP+mUM/E13tijQF1EZcZiMNJ1vbEF9GA0qo5YxOjNAvvOWoLBbxXOqxWJsjSsluFJZiyS0h09UoOvzldNCa0PzQpfLH/E3Diqtkd6IGqUWPMTaxcJ1d9WglBBiw2gD807lMBSULpJiHfvmVxBFy/wfi3WQ1txusr0eBOA0GqlIR6A4FGbH7Rj1m9sHK0oDAgUiUF82BREF244lG8Ecq2JjL+5z/Do1M6b9rK65M+FygmpcTKNm9WHmyiGy5aWarjvP3P7nzf86UvnuWbqJsJNgrf/o8k+tCY03PUiGvDyVjvc0BtX0z5QPSBi98rppGgd+OFriQdLMiLtyg+ej1C1ZvwRJrd1WFzMgZGML7GxWKBXA="
      - secure: "icytWBJqEWu9ADdTOidzlV8ymPlMgjmEYZbo+vdqkc3q51+TuThPVE+DDNI12C96Apj+v8zKGblfowQFiyi7qpau8uJmo2EtGNgwpwHn48HumFzexxQeyriNENerQKLmtpQ4o9UvL3FoODIqbsuvmj2lbEewlrKo0//fW2ewozSQOsyxwKJ9J64wLIsBt4v95EXWbG+hKkD7Ps3q9Q/lIITY02l25tcKSUHqXehDHNDVXdGI6SdU14SgG/AeypJVzwGZf8iBOj0lvEPTK0F2VvhEeXq/lfXglMwPePlYBweJFQURdXPCfjK/2Nlcw/saEGew7fywjpq3nSBV8+gbaISOE3xBgogHU0G2U1BWmB3qtUtWDl+ggN5+UL5xgOLEvAYqsWqHCsPNJqh768F1udOQ/6XcaMLpj1nwEXiX8e3v/GAtQFf9rEqZ5BxEQoJjzcteI7P1Dv1GaaAlx6psIWq9eHwP01ytXUNdbgXL9wrj7trKQ+iYB11V7avO8GaJtBQh8YTEAJ86AT65X4Jwzz2dC5H54qbv8340CTpAtouzX1u8uW1Ea7B3Nm05cA6/ckIFLFHkTT8QPe2m4SyY45/Ex0kg4Qd85fxWZma9WooKHYTeBferC9SYuib7PZmyJqWUSQvxfKenOl342uyFm+vUS8aWtmiu6W1jZJ6XG4I="
      - secure: "YprBSdN9jOZmB64FafzhN1vhoG2bcjMt/uq/b5gYnYNk8IzIYMMNowoirwRizk6qXXdmNXfENtlnQ3pEGZpbjaUPGEhkD1X/kcdlGLbqwxMxcAKxewskobRyOy/41XjZgyrhlHH9++1dddAFC08ooznBiZMh56I1YM11uRd3dHy9mhUouGBBew7+nZ6dViDkOx3CMfTXhfc+0SmaLkZSA0OuhCZzDqCHVIAzfhHHsP5X5ZmB3qcchB+anGBk+6xdkk0BXepc5qAfMgJ3ybX7OopjFgdFNZOWa79e7a0g1dT1sSygp9lkRlw4TT1fHmvP37Fhi40vgahzZSAupXQD3sSorQ8x5++OlmmaVrdrJS+3MPJSBMFeRq90/eWH/Ajh5IobkoL6ZBhb1hntNlVVmH5Z3wKzcFYgVOBOmFNjX0/jvY14b3BgxMNAJcdXOxk0gOSPxHuMdcNNJs5XqKJyi8bvJY4uDv6k1y7sF+5vB76PObBUNi3mNjWecmc6Y1xbMx4V3o/2giwbVC3z/iFjSsF0N46xWw1W7Uz5c8+JgSNCRh/duzcRrvs0cFH/in6wLq/vIvOg2TmDg2HwXSzy8W2ivNCi57ESubcyyJ6SVDdLify294Y+lDUyDZ2j7q33ZjASVXFaSkM5PBsOt7eFDh/GKYfsGqUOQgW3vkO4hy0="
  matrix:
    #  - QGIS_VERSION_TAG=release PYTHON_EXECUTABLE=python PIP_EXECUTABLE=pip
      - QGIS_VERSION_TAG=master_2 PYTHON_EXECUTABLE=python PIP_EXECUTABLE=pip
    # - QGIS_VERSION_TAG=master PYTHON_EXECUTABLE=python PIP_EXECUTABLE=pip

before_install:
    - docker pull boundlessgeo/qgis-testing-environment:${QGIS_VERSION_TAG}
    - docker tag boundlessgeo/qgis-testing-environment:${QGIS_VERSION_TAG} qgis-testing-environment
install:
    - docker run -d --name qgis-testing-environment -v ${TRAVIS_BUILD_DIR}:/tests_directory -e LDI_LINZ_KEY -e LDI_MFE_KEY -e LDI_NZDF_KEY -e DISPLAY=:99 qgis-testing-environment 
    - sleep 10
    - docker exec -it qgis-testing-environment sh -c "qgis_setup.sh ${PLUGIN_NAME}"
    - docker exec -it qgis-testing-environment sh -c "ln -s /tests_directory /root/.qgis2/python/plugins/${PLUGIN_NAME}"
    - docker exec -it qgis-testing-environment sh -c "pip install pyproj"

script:
    - docker exec -it qgis-testing-environment sh -c "qgis_testrunner.sh ${PLUGIN_NAME}.tests.run_tests.run_test_modules"
